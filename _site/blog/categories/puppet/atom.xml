<!doctype html>
<!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if (IE 7)&!(IEMobile)]><html class="no-js lt-ie9 lt-ie8" lang="en"><![endif]-->
<!--[if (IE 8)&!(IEMobile)]><html class="no-js lt-ie9" lang="en"><![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"><!--<![endif]-->
<head>
<meta charset="utf-8">
<title>Category: puppet &#8211; Just another tech blog</title>

<meta name="keywords" content="">



<!-- Twitter Cards -->
<meta name="twitter:title" content="Category: puppet">

<meta name="twitter:site" content="@clburlison">
<meta name="twitter:creator" content="@clburlison">

<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="http://clburlison.com/images/">

<!-- Open Graph -->
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Category: puppet">

<meta property="og:url" content="http://clburlison.com/blog/categories/puppet/atom.xml">
<meta property="og:site_name" content="Just another tech blog">





<link rel="canonical" href="http://clburlison.com/blog/categories/puppet/atom.xml">
<link href="http://clburlison.com/feed.xml" type="application/atom+xml" rel="alternate" title="Just another tech blog Feed">


<!-- http://t.co/dKP3o1e -->
<meta name="HandheldFriendly" content="True">
<meta name="MobileOptimized" content="320">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- For all browsers -->
<link rel="stylesheet" href="http://clburlison.com/assets/css/main.css">

<meta http-equiv="cleartype" content="on">

<!-- HTML5 Shiv and Media Query Support -->
<!--[if lt IE 9]>
	<script src="http://clburlison.com/assets/js/vendor/html5shiv.min.js"></script>
	<script src="http://clburlison.com/assets/js/vendor/respond.min.js"></script>
<![endif]-->

<!-- Modernizr -->
<script src="http://clburlison.com/assets/js/vendor/modernizr-2.7.1.custom.min.js"></script>

<!-- Icons -->
<!-- 16x16 -->
<link rel="shortcut icon" href="http://clburlison.com/favicon.ico">
<!-- 32x32 -->
<link rel="shortcut icon" href="http://clburlison.com/favicon.png">
<!-- 57x57 (precomposed) for iPhone 3GS, pre-2011 iPod Touch and older Android devices -->
<link rel="apple-touch-icon-precomposed" href="http://clburlison.com/images/apple-touch-icon-precomposed.png">
<!-- 72x72 (precomposed) for 1st generation iPad, iPad 2 and iPad mini -->
<link rel="apple-touch-icon-precomposed" sizes="72x72" href="http://clburlison.com/images/apple-touch-icon-72x72-precomposed.png">
<!-- 114x114 (precomposed) for iPhone 4, 4S, 5 and post-2011 iPod Touch -->
<link rel="apple-touch-icon-precomposed" sizes="114x114" href="http://clburlison.com/images/apple-touch-icon-114x114-precomposed.png">
<!-- 144x144 (precomposed) for iPad 3rd and 4th generation -->
<link rel="apple-touch-icon-precomposed" sizes="144x144" href="http://clburlison.com/images/apple-touch-icon-144x144-precomposed.png">

</head>

<body class="page">

<!--[if lt IE 9]><div class="browser-upgrade alert alert-info">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</div><![endif]-->

<div class="navigation-wrapper">
	<div class="site-name">
		<a href="http://clburlison.com">Just another tech blog</a>
	</div><!-- /.site-name -->
	<div class="top-navigation">
		<nav role="navigation" id="site-nav" class="nav">
		    <ul>
		        
					    
					        
					    
					    <li><a href="http://clburlison.com/about/" >About</a></li>
					  
					    
					        
					    
					    <li><a href="http://clburlison.com/resources/" >Resources</a></li>
					  
					    
					        
					    
					    <li><a href="http://clburlison.com/blog/archives/" >Archives</a></li>
					  
		    </ul>
		</nav>
	</div><!-- /.top-navigation -->
</div><!-- /.navigation-wrapper -->



<div id="main" role="main">
  <div class="article-author-side">
    



	<img src="http://clburlison.com/images/me.jpg" class="bio-photo" alt="Clayton Burlison bio photo"></a>

<h3>Clayton Burlison</h3>
<p>A Mac sysadmin, documenting useful code, ideas, & guides.</p>
<a href="mailto:clburlison@gmail.com" class="author-social" target="_blank"><i class="fa fa-envelope-square"></i> Email</a>
<a href="http://twitter.com/clburlison" class="author-social" target="_blank"><i class="fa fa-twitter-square"></i> Twitter</a>
<a href="http://facebook.com/clburlison" class="author-social" target="_blank"><i class="fa fa-facebook-square"></i> Facebook</a>

<a href="http://linkedin.com/in/clburlison" class="author-social" target="_blank"><i class="fa fa-linkedin-square"></i> LinkedIn</a>


<a href="http://github.com/clburlison" class="author-social" target="_blank"><i class="fa fa-github"></i> Github</a>






  </div>
  <article>
    <h1>Category: puppet</h1>
    <div class="article-wrap">
      <?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: puppet | Just another tech blog]]></title>
  <link href="http://clburlison.com/blog/categories/puppet/atom.xml" rel="self"/>
  <link href="http://clburlison.com/"/>
  <updated>2014-08-11T23:45:53-05:00</updated>
  <id>http://clburlison.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="https://github.com/recurser/jekyll-plugins">Recurser</generator>

  
  <entry>
    <title type="html"><![CDATA[Things learned from boxen]]></title>
    <link href="http://clburlison.com/blog/2014/04/24/things-learned-from-boxen/"/>
    <updated>2014-04-24T11:55:48-05:00</updated>
    <id>http://clburlison.com/blog/2014/04/24/things-learned-from-boxen</id>
    <content type="html"><![CDATA[<h2 id="what-is-boxen">What is boxen?</h2>
<p>So odds are if you have landed on this page you have probably already heard of boxen. For those who have not heard yet, boxen is an open source project created by the good people at <a href="http://github.com">github.com</a> as a way to quickly setup a Macintosh computer. Boxen can also be used as a way to keep certain settings managed between two or more devices. Think for a second, your laptop goes with you everywhere and along with that you have all of your custom shell scripts, shell alias, ssh keys, etc. With boxen you can systematically take all those settings that you love and move them to every computer you use.</p>

<hr />

<h2 id="first-lesson-learned">First lesson learned</h2>
<p>Starting out I found out how few of my settings I had documented. The problem that plagues every IT department, documentation. With a mult-user network, this is a pretty big deal since it can cause confusion in the future along with creating ample down time when you are trying to troubleshoot a system that you setup, customized, and did not document. We all know the pit falls of doing this in a mult-user environment but my laptop is a single-user environment and except for extremely rare cases, I am the only one that uses it. Why do I need to document settings for my laptop you might ask? </p>

<p>Well hopefully, this never happens but what do you do when your hard drive crashes, or you accidentally ran a remove command in the wrong directory tree? Gone are the days where you could shut the door and start rebuilding from scratch…sure you could restore from a backup but boxen tackles a task like this a little differently. Boxen is not a backup solution it is used to manage a system. With boxen, I have a complete history of all the changes I have made to my system. Might not seem like a big deal, but it makes life much easier when trying to find out how you set AirDrop to work over Ethernet connections. Hint: <a href="/blog/2014/04/18/enable-airdrop-on-ethernet/">Previous Article</a>, or <a href="https://raw.githubusercontent.com/clburlison/my-boxen/master/modules/people/manifests/clburlison/config.pp">my config file</a>.</p>

<p>Hopefully you can see the power of this. I was late to the party but finally got around to using boxen and now cannot imagine making changes without documenting it this way. Sure having text files stored on a file-share is a solution, but this is a living git repo that allows me to document everything, plus I have a built-in file versioning with commits.</p>

<h3 id="how-you-can-get-started">How you can get started?</h3>
<p>Now is a good time to note, I am not completely up to speed with puppet aka the backend of boxen. I was however able to hack around until I got the stuff to work. Start small with configuring the installation of say Firefox. Once you get that working keep looking around on <a href="http://github.com/boxen">github.com/boxen</a> and see if there are other applications you can add easily. If not move on to what I like to call “borrowing code from those smarter than me”. You too can participate in this act by downloading other’s boxen repos. Looking inside their configurations files and copying and pasting code. </p>

<p>At first, you might not know what you’re doing and that is fine. It is a learning experience after all but over time you will begin to understand the structure of the code. Odds are, if you are trying to automate some part of your Mac someone else wants to do it as well or already has. Do not attempt to reinvent the wheel.</p>

<p>So which repo’s do I recommend you looking at the most? <a href="https://github.com/glarizza/my-boxen">Gary Larizza</a>, <a href="https://github.com/grahamgilbert/my-boxen">Graham Gilbert</a>, and <a href="https://github.com/clburlison/my-boxen">mine</a> are full of useful code. You will still want to learn puppet but hopefully the comments in the repos listed above help guide you through starting out.</p>

<h3 id="dropbox-usage">Dropbox usage</h3>
<p>One of the issues I ran into while looking at boxen was storing personal information in a public github repo. You could make your boxen repo private but that was not the method I wanted to take. I could also just copy all my private information after the initial boxen setup but does that not defeat the main purpose of boxen? Luckily Graham had already found out a solution which is to use Dropbox for everything that should not be shared with others. Before I continue on let me put a disclaimer that if you plan on storing ssh keys, license files, or really personal information you really need to enable two-step verification. Attached <a href="https://www.dropbox.com/help/363/en">here</a> is the setup guide as this is very important for you to do.</p>

<p>You setup 2fa for Drobox, right? If you have not what are you waiting for? Now that your Dropbox is secure or at least more secure, I would create a directory structure that matches OS X. This might make for long paths while creating settings in puppet code but having a logical file-management system that actually matches where the files are actually being placed by boxen will help. Below is a screenshot of my directory structure as of this writing.<br />
<img src="http://clburlison.com/images/posts/2014-04-24/Dropbox-config.png" alt="dropbox-config" /> </p>

<h3 id="no-really-how-can-i-get-started">No really how can I get started?</h3>
<ul>
  <li>Well Gary has the best write up though it is a bit dated <a href="http://garylarizza.com/blog/2013/02/15/puppet-plus-github-equals-laptop-love/">Puppet + Github = Laptop Love</a></li>
  <li>Easy step-by-step setup <a href="http://coffeecupblog.com/blog/2013/03/24/automate-your-mac-provisioning-with-boxen-first-steps/">Coffee Cup Blog</a></li>
  <li>Another easy let’s get started <a href="https://coderwall.com/p/kppokq">Thomas Riboulet</a></li>
</ul>

<h2 id="summary">Summary</h2>
<p>Boxen is free to use. Allows you to configure existing computers, bootstrap new computers, and keep an online documentation detailed of all the custom settings that you love about your computer. Boxen is also a great way to get started with puppet. </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a puppetmaster on Mavericks]]></title>
    <link href="http://clburlison.com/blog/2014/04/04/setting-up-a-puppetmaster-on-mavericks/"/>
    <updated>2014-04-04T11:40:54-05:00</updated>
    <id>http://clburlison.com/blog/2014/04/04/setting-up-a-puppetmaster-on-mavericks</id>
    <content type="html"><![CDATA[<p>For various reasons I decided to set up my puppetmaster on an OS X install of Mavericks instead of what I would consider the norm, being a linux distro. Here are the results. This documentation is strongly based on the article by Nate Walck on afp548.com.</p>

<hr />

<h3 id="introduction-to-puppet">Introduction to puppet</h3>
<p>Puppet is a service that is normally ran in a client/server setup that helps manage and configure devices. Since I am an OS X administrator, this article will be coving the installation and configuration on an OS X platform. While many sysadmins will prefer server installation on a linux distro I simply did not want to mess with getting a Virtual Machine approved in my environment. Below are the steps that I took to set up a puppetmaster on an OS X Mavericks install.  </p>

<h3 id="pre-steps">Pre-steps</h3>
<p>Setting up dns, creating a CNAME record, verifying dns records, etc. Aka all the things I should have done but did not. I will go ahead and mention now that if you are doing this for production taking a moment to do this correctly the first time will save you hours of headache down the road. Since I do not have control over network settings at work, I skipped these steps and decided to use the server hostnames in my case. Please refer to the <a href="http://www.afp548.com/2013/02/26/setting-up-a-basic-3-1-x-puppet-master-on-os-x-10-8/">article</a> by Nate if you want to do things the approved way.</p>

<h3 id="install-the-software">Install the software</h3>
<p>Next, we must install Puppet on our master.  The Reference Manual has a section specifically for OS X regarding the puppet install. For Mavericks, you will want at least <strong>Puppet version 3.2.X</strong> or higher. You will also want to install <strong>Facter, and Hiera</strong>.</p>

<p>Each of these pieces of software can be obtained from <a href="http://downloads.puppetlabs.com/mac/">here</a>. (After downloading, you will want to install each of the three packages. A control click might be needed if you have Gatekeeper enabled.)</p>

<p>The puppet service account should be created automatically. It is good practice to double checking this by running. Check for Puppet user: 
<div class="highlight"><pre><code class="language-bash" data-lang="bash">id puppet</code></pre></div>  </p>

<p>The command above should list the puppet user’s uid, gid and groups.  If you get ‘id: puppet: no such user’ instead, then you will need to create the user manually.  Create the service account and puppet group using the following two commands (As per the Reference Manual):</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sudo puppet resource group puppet <span class="nv">ensure</span><span class="o">=</span>present
sudo puppet resource user puppet <span class="nv">ensure</span><span class="o">=</span>present <span class="nv">gid</span><span class="o">=</span>puppet <span class="nv">shell</span><span class="o">=</span>’/sbin/nologin’</code></pre></div></p>

<p>You also do not want this puppet user to appear at the login window (since it is a service account), so run the following command to hide it (or you can set it via MCX, Profile, etc):</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sudo defaults write /Library/Preferences/com.apple.loginwindow Hide500Users -boolean YES</code></pre></div></p>

<h3 id="settings-up-our-puppetmaster">Settings up our puppetmaster</h3>
<p>Now we will make changes to the default puppet configuration for our server. This can be done with <strong>sudo nano /etc/puppet/puppet.conf</strong> then enter the following text. Save with “Ctrl + X”</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># Default Puppet Settings</span>
<span class="nv">server</span> <span class="o">=</span> server_host_name_here <span class="c"># default is ‘puppet’</span>
<span class="nv">report</span> <span class="o">=</span> <span class="nb">true</span>
<span class="nv">pluginsync</span> <span class="o">=</span> <span class="nb">true</span>
<span class="nv">certname</span> <span class="o">=</span> server.company.com <span class="o">(</span>The FQDN of the machine that is running puppet<span class="o">)</span></code></pre></div></p>

<p>Also, since pluginsync is enabled by default, create the modules folder and make sure the puppet user owns it. We can create our manifests directory while we are at it. The latter command will create the default <em>site.pp</em> file:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sudo mkdir /etc/puppet/modules
sudo chown puppet /etc/puppet/modules
sudo mkdir /etc/puppet/manifests
sudo touch /etc/puppet/manifests/site.pp
sudo chown puppet /etc/puppet/manifests/site.pp</code></pre></div></p>

<p>Lastly, run puppet as a master for the first time using the following command:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sudo puppet master –debug –verbose –no-daemonize</code></pre></div></p>

<p>Because we are running puppet as a master, it will generate a CA (Certificate Authority) so it can securely talk to clients and create other folder structure that the master needs to function.</p>

<h4 id="launchdaemon-setup">LaunchDaemon setup</h4>
<p>Puppet is now fully configured as a basic master, but we are missing one key component: a service to make sure that Puppet is running.  Since we are setting this up on OS X, we will use a launchd job.  The Puppet documentation on setting up the launchd item can be found <a href="http://docs.puppetlabs.com/guides/installation.html#with-launchd">here</a>.  In this documentation, Puppet Labs has provided us with a launchd item that can take care of starting our puppet master for us.  You can view the original plist <a href="http://docs.puppetlabs.com/guides/installation.html#mac-os-x">here</a> or copy it from the box.</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;?xml <span class="nv">version</span><span class="o">=</span><span class="s2">&quot;1.0&quot;</span> <span class="nv">encoding</span><span class="o">=</span><span class="s2">&quot;UTF-8&quot;</span>?&gt;
<span class="p">&amp;</span>lt<span class="p">;</span>!DOCTYPE plist PUBLIC “-//Apple Computer//DTD PLIST 1.0//EN” “http://www.apple.com/DTDs/PropertyList-1.0.dtd”<span class="p">&amp;</span>gt<span class="p">;</span>
&lt;plist <span class="nv">version</span><span class="o">=</span><span class="s2">&quot;1.0&quot;</span>&gt;&lt;/plist&gt;&lt;/p&gt;
&lt;dict&gt;
        &lt;key&gt;EnvironmentVariables&lt;/key&gt;
        &lt;dict&gt;
                &lt;key&gt;PATH&lt;/key&gt;
                &lt;string&gt;/sbin:/usr/sbin:/bin:/usr/bin&lt;/string&gt;
                &lt;key&gt;RUBYLIB&lt;/key&gt;
                &lt;string&gt;/usr/lib/ruby/site_ruby/1.8/&lt;/string&gt;
        &lt;/dict&gt;
        &lt;key&gt;Label&lt;/key&gt;
        &lt;string&gt;com.puppetlabs.puppetmaster&lt;/string&gt;
        &lt;key&gt;OnDemand&lt;/key&gt;
        &lt;<span class="nb">false</span> /&gt;
        &lt;key&gt;ProgramArguments&lt;/key&gt;
        &lt;array&gt;
                &lt;string&gt;/usr/bin/puppet&lt;/string&gt;
                &lt;string&gt;master&lt;/string&gt;
                &lt;string&gt;--verbose&lt;/string&gt;
                &lt;string&gt;--no-daemonize&lt;/string&gt;
        &lt;/array&gt;
        &lt;key&gt;RunAtLoad&lt;/key&gt;
        &lt;<span class="nb">true</span> /&gt;
        &lt;key&gt;ServiceDescription&lt;/key&gt;
        &lt;string&gt;Puppetmaster Daemon&lt;/string&gt;
        &lt;key&gt;ServiceIPC&lt;/key&gt;
        &lt;<span class="nb">false</span> /&gt;
        &lt;key&gt;StandardErrorPath&lt;/key&gt;
        &lt;string&gt;/var/log/puppet/puppetmaster.err&lt;/string&gt;
        &lt;key&gt;StandardOutPath&lt;/key&gt;
        &lt;string&gt;/var/log/puppet/puppetmaster.out&lt;/string&gt;
&lt;/dict&gt;
&lt;p&gt;<span class="p">&amp;</span>lt<span class="p">;</span>/plist<span class="p">&amp;</span>gt<span class="p">;</span></code></pre></div></p>

<p>Save the contents of this file into <strong>/Library/LaunchDaemons/com.puppetlabs.puppetmaster.plist</strong> . Also, make sure the permissions are correct on the file:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sudo chown root:wheel /Library/LaunchDaemons/com.puppetlabs.puppetmaster.plist&lt;br /&gt;
sudo chmod <span class="m">644</span> /Library/LaunchDaemons/com.puppetlabs.puppetmaster.plist</code></pre></div></p>

<p>Lastly, load the launchd using launchctl:</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sudo launchctl load -w /Library/LaunchDaemons/com.puppetlabs.puppetmaster.plist</code></pre></div></p>

<p>We should now have a fully functional puppetmaster running on OS X Mavericks. Note that this is running with the default WEBrick server that comes with puppet. While this should be okay for development it is not suitable for production. Methods for scaling Puppet can be found on the <a href="http://docs.puppetlabs.com/guides/scaling.html">Scaling Puppet</a> page.</p>

<p>More information about puppet will be published in the future. I am going through beta testing with Puppet at the time of this writing.</p>

<hr />

<p>Articles: <a href="http://www.afp548.com/2013/02/26/setting-up-a-basic-3-1-x-puppet-master-on-os-x-10-8/">afp548.com</a>, <a href="http://docs.puppetlabs.com/guides/installation.html#mac-os-x">Puppetlabs Offical Documentation</a></p>
]]></content>
  </entry>
  
</feed>
    </div><!-- /.article-wrap -->
    
  </article>
</div><!-- /#index -->

<div class="footer-wrap">
  <footer>
    <div class="google-ads">
  <!-- 320 x 50 ad -->
  <script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
  <ins class="adsbygoogle"
       style="display:inline-block;width:320px;height:50px"
       data-ad-client=""
       data-ad-slot=""></ins>
  <script>
  (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
</div><!-- /.google-ads -->

<span>&copy; 2014 Clayton Burlison. Powered by <a href="http://jekyllrb.com">Jekyll</a> using the <a href="http://mademistakes.com/minimal-mistakes/">Minimal Mistakes</a> theme.</span>

  </footer>
</div><!-- /.footer-wrap -->

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="http://clburlison.com/assets/js/vendor/jquery-1.9.1.min.js"><\/script>')</script>
<script src="http://clburlison.com/assets/js/scripts.min.js"></script>

<!-- Asynchronous Google Analytics snippet -->
<script>
  var _gaq = _gaq || [];
  var pluginUrl = 
 '//www.google-analytics.com/plugins/ga/inpage_linkid.js';
  _gaq.push(['_require', 'inpage_linkid', pluginUrl]);
  _gaq.push(['_setAccount', 'UA-49614309-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>

          

</body>
</html>